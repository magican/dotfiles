#!/usr/bin/env bash

# This file contains settings for mac which makes me happy.
# It is not a full list.
#
# The best resource of finding new settings for other users is:
# https://www.defaults-write.com
#
# Some parts are taken from:
# - https://github.com/rootbeersoup/dotfiles
# - https://github.com/skwp/dotfiles
# - https://cojo.eu/post/install-configure-macos-catalina/
#
# All values are sorted inside their blocks: newest are on the top.
#

set +e

disable_agent() {
	mv "$1" "$1_DISABLED" >/dev/null 2>&1 ||
		sudo mv "$1" "$1_DISABLED" >/dev/null 2>&1
}

unload_agent() {
	launchctl unload -w "$1" >/dev/null 2>&1
}

test -z "$TRAVIS_JOB_ID" && sudo -v

# MANUAL
    # Security & Privacy -> General: Require password immediately.
    # Spotlight -> Disable everything, except Applications, System Preferences, Calculator.
    # General: Allow Handoff between this Mac and your iCloud devices.
    # Cleanup Right Sidebar.
    # Bluetooth: Show Bluetooth in the menu bar
    # Open Finder: New finder: "home". Sidebar: Show "home", Disable Tags.
    # Open Brave/Firefox: Default browser and setup.

echo 'Configuring your mac. Hang on tight.'
osascript -e 'tell application "System Preferences" to quit'

###############################################################################
# General security & privacy                                                  #
###############################################################################
echo ""
echo "› System:"
echo "  › Disable press-and-hold for keys in favor of key repeat"
defaults write -g ApplePressAndHoldEnabled -bool false

echo "  › Show the ~/Library folder"
chflags nohidden ~/Library

echo "  › Show the /Volumes folder"
sudo chflags nohidden /Volumes

echo "  › Set a really fast key repeat"
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 15

echo "  › Enable text replacement almost everywhere"
defaults write -g WebAutomaticTextReplacementEnabled -bool true

echo "  › Turn off keyboard illumination when computer is not used for 5 minutes"
defaults write com.apple.BezelServices kDimTime -int 300

echo "  › Require password immediately after sleep or screen saver begins"
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

echo "  › Always show scrollbars"
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
# Possible values: `WhenScrolling`, `Automatic` and `Always`

echo "  › Show battery percent"
defaults write com.apple.menuextra.battery ShowPercent -bool true

echo "  › Disable the 'Are you sure you want to open this application?' dialog"
defaults write com.apple.LaunchServices LSQuarantine -bool false

echo "  › Disable storing information about downloaded files by Quarantine."
# Clear the file: `:> file` is equivalent to `true > file`
(:> ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2) &> /dev/null
# Make the file immutable.
sudo chflags schg ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2 &> /dev/null

echo "  › Disable Bonjour multicast advertisements."
sudo defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true

echo "  › Disable automatic login."
sudo defaults delete /Library/Preferences/com.apple.loginwindow autoLoginUser &> /dev/null
sudo rm /etc/kcpassword &> /dev/null

echo "  › Disable remote control infrared receiver."
sudo defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool false

echo "  › Allow apps downloaded from "Anywhere"."
sudo spctl --master-disable

echo "  › Do not send diagnostic & usage data to Apple."
defaults -currentHost write com.apple.SubmitDiagInfo AutoSubmit -bool false

echo "  › Save to disk (not to iCloud) by default."
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

echo "  › Disable crash reporter."
defaults write com.apple.CrashReporter DialogType none

echo "  › Disable location services."
defaults write com.apple.MCX DisableLocationServices -bool true

echo "  › Disable service daemons related to 'Feedback Assistant'."
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.appleseed.fbahelperd.plist 2> /dev/null
launchctl unload -w /System/Library/LaunchAgents/com.apple.appleseed.seedusaged.plist 2> /dev/null

echo "  › # Disable 'Apple Wide Area Connectivity' service daemon."
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.awacsd.plist 2> /dev/null

echo "  › Disable service daemon related to 'Wireless Diagnostics'."
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.awdd.plist 2> /dev/null

echo "  › Disable service daemon related to 'Crash Reporter'."
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.CrashReporterSupportHelper.plist 2> /dev/null

echo "  › Disable service daemon that collects and sends to Apple any recent diagnostic information."
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.SubmitDiagInfo.plist 2> /dev/null

echo "  › Disable service daemon related to 'Siri'."
launchctl unload -w /System/Library/LaunchAgents/com.apple.assistant_service.plist 2> /dev/null

echo "  › Disable Ask Siri."
defaults write com.apple.assistant.support "Assistant Enabled" -bool false

echo "  › Don't show Siri in menu bar."
defaults write com.apple.systemuiserver "NSStatusItem Visible Siri" -bool false

echo "  › Disable service daemon related to photos and iCloud."
launchctl unload -w /System/Library/LaunchAgents/com.apple.cloudphotosd.plist 2> /dev/null

echo "  › Disable service daemon related to Safari history syncing."
launchctl unload -w /System/Library/LaunchAgents/com.apple.SafariCloudHistoryPushAgent.plist 2> /dev/null

echo "  › Disable service daemon related to Safari bookmark syncing."
launchctl unload -w /System/Library/LaunchAgents/com.apple.safaridavclient.plist 2> /dev/null

echo "  › Limit ad tracking. Opt out of receiving ads targeted to your interests in Apple Apps and your macOS devices."
defaults write com.apple.AdLib forceLimitAdTracking -bool false

echo "  › Disable Touch Bar typing suggestions."
defaults write NSGlobalDomain NSAutomaticTextCompletionEnabled -bool false

# === General ===
echo ""
echo "› General:"
echo "  › Ask to keep changes when closing documents"
  defaults write NSGlobalDomain NSCloseAlwaysConfirmsChanges -bool true

echo "› Dock"
  defaults write com.apple.dock persistent-apps -array              # Wipe all (default) app icons from the Dock
  defaults write com.apple.dock tilesize -int 36                    # Size
  defaults write com.apple.dock orientation -string "left"          # Position on screen
  defaults write com.apple.dock minimize-to-application -bool true  # Minimise windows into application icon
  defaults write com.apple.dock autohide -bool true                 # Automatically hide and show the Dock
  defaults write com.apple.dock show-recents -bool false            # Show recent applications in Dock

echo "› Keyboard"
  # Text: Disable auto-correct
  defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

echo "› Trackpad"
  # Trackpad: enable tap to click for this user and for the login screen
  defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  # Enable tap at login as well
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

echo "› Accessibility"
  # Mouse & Trackpad -> Trackpad Options -> Enable Dragging
  defaults write com.apple.AppleMultitouchTrackpad Dragging -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Dragging -bool true

echo "› Other"
  # Prevent Photos from opening automatically when devices are plugged in
  defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

  # Prevent iTunes from opening automatically when devices are plugged in
  defaults write com.apple.iTunesHelper ignore-devices 1

  # Save to disk by default - not to iCloud
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

  # Prevent Time Machine from prompting to use new hard drives as backup volume
  defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo "› TextEdit"
  # Use plain text mode for new TextEdit documents
  defaults write com.apple.TextEdit RichText -int 0

  # Open and save files as UTF-8 in TextEdit
  defaults write com.apple.TextEdit PlainTextEncoding -int 4
  defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

# === Finder ===
echo ""
echo "› Finder:"
echo "  › Set Desktop as the default location for new Finder windows"
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfDe"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

echo "  › Show icons for hard drives, servers, and removable media on the desktop"
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

echo "  › When performing a search, search the current folder by default"
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

echo "  › Use list view in all Finder windows by default"
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

echo "  › Keep folders on top when sorting by name:"
defaults write com.apple.finder _FXSortFoldersFirst -bool true

echo "  › Show Finder path bar:"
defaults write com.apple.finder ShowPathbar -bool true

echo "  › Show status bar in Finder:"
defaults write com.apple.finder ShowStatusBar -bool true

echo "  › Show hidden files in Finder:"
defaults write com.apple.finder AppleShowAllFiles -bool true

echo "  › Show file extensions in Finder:"
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

echo "  › Allow quitting Finder via ⌘ + Q; doing so will also hide desktop icons"
defaults write com.apple.finder QuitMenuItem -bool true

echo "  › Allow text selection in Quick Look"
defaults write com.apple.finder QLEnableTextSelection -bool true

echo "  › Display full POSIX path as Finder window title"
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

echo "  › Avoid creating .DS_Store files on network volumes"
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

echo "  › Show Library folder"
chflags nohidden ~/Library


# === Safari ===
echo ""
echo "› Safari:"
echo "  › Privacy: don’t send search queries to Apple"
defaults write com.apple.Safari UniversalSearchEnabled -bool false
defaults write com.apple.Safari SuppressSearchSuggestions -bool true

echo "  › Improve Safari security"
defaults write com.apple.Safari \
  com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled \
  -bool false
defaults write com.apple.Safari \
  com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles \
  -bool false


# === Maccy ===
echo ""
echo "› Maccy:"
# https://github.com/p0deje/Maccy
defaults write org.p0deje.Maccy pasteByDefault true
defaults write org.p0deje.Maccy historySize 20

# Allowing to run Apps with no signature
xattr -d com.apple.quarantine /Applications/Maccy.app
xattr -d com.apple.quarantine /Applications/SourceTree.app

xattr -d com.apple.quarantine ~/Library/QuickLook/QLStephen.qlgenerator
xattr -d com.apple.quarantine ~/Library/QuickLook/QLColorCode.qlgenerator
xattr -d com.apple.quarantine ~/Library/QuickLook/qlImageSize.qlgenerator
xattr -d com.apple.quarantine ~/Library/QuickLook/QLMarkdown.qlgenerator
xattr -d com.apple.quarantine ~/Library/QuickLook/QuickLookJSON.qlgenerator

###############################################################################
# Transmission                                                                #
###############################################################################
echo ""
echo "› Transmission:"
# Use `~/Documents/Torrents` to store incomplete downloads.
defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Documents/Torrents"

# Use `~/Downloads` to store completed downloads.
defaults write org.m0k.transmission DownloadLocationConstant -bool true

# Don't prompt for confirmation before downloading.
defaults write org.m0k.transmission DownloadAsk -bool false
defaults write org.m0k.transmission MagnetOpenAsk -bool false

# Don't prompt for confirmation before removing non-downloading active transfers.
defaults write org.m0k.transmission CheckRemoveDownloading -bool true

# Trash original torrent files.
defaults write org.m0k.transmission DeleteOriginalTorrent -bool true

# Hide the donate message.
defaults write org.m0k.transmission WarningDonate -bool false

# Hide the legal disclaimer.
defaults write org.m0k.transmission WarningLegal -bool false

# IP block list.
# Source: https://giuliomac.wordpress.com/2014/02/19/best-blocklist-for-transmission/
defaults write org.m0k.transmission BlocklistNew -bool true
defaults write org.m0k.transmission BlocklistURL -string "http://john.bitsurge.net/public/biglist.p2p.gz"
defaults write org.m0k.transmission BlocklistAutoUpdate -bool true

# Randomize port on launch.
defaults write org.m0k.transmission RandomPort -bool true

# Turn on "Stop seeding at ratio" of 2.00.
defaults write org.m0k.transmission RatioCheck -bool true
defaults write org.m0k.transmission RatioLimit -string "2.00"

# Remove from the transfer list when seeding completes.
defaults write org.m0k.transmission RemoveWhenFinishSeeding -bool true

# Turn on "Download with maximum of" 1 active transfer.
defaults write org.m0k.transmission Queue -bool true
defaults write org.m0k.transmission QueueDownloadNumber -bool true

# Don't play sound when download completes.
defaults write org.m0k.transmission PlayDownloadSound -bool false

# Don't play sound when seeding completes.
defaults write org.m0k.transmission PlaySeedingSound -bool false

###############################################################################
# VLC media player                                                            #
###############################################################################
echo ""
echo "› VLC:"
# Enable checking for updates automatically.
defaults write org.videolan.vlc SUEnableAutomaticChecks -bool true

# Disable checking online for album art and metadata.
defaults write org.videolan.vlc SUSendProfileInfo -bool true

# Set language to "American English".
defaults write org.videolan.vlc language -string "en"

#############################

echo ""
echo "› Media:"
if [ -z "$KEEP_ITUNES" ]; then
	echo "  › Disable iTunes helper"
	disable_agent /Applications/iTunes.app/Contents/MacOS/iTunesHelper.app
	echo "  › Prevent play button from launching iTunes"
	unload_agent /System/Library/LaunchAgents/com.apple.rcd.plist
fi

echo "  › Disable Spotify web helper"
disable_agent ~/Applications/Spotify.app/Contents/MacOS/SpotifyWebHelper

###############################################################################
# Kill affected applications                                                  #
###############################################################################
# Restarting apps:
echo 'Restarting apps...'

AFFECTED_APPS=(
	"Activity Monitor"
  "Address Book"
  "Calendar"
  "Contacts"
  "cfprefsd"
	"App Store"
	"Dock"
	"Finder"
  "Mail"
  "Messages"
  "Photos"
  "Safari"
	"SystemUIServer"
	"Terminal"
	"Transmission"
	"VLC"
)

for app in "${AFFECTED_APPS[@]}"
do
	killall "${app}" &> /dev/null
done

echo 'Done!'
echo 'NB! One should consider rebooting for some of these changes to take effect!'
